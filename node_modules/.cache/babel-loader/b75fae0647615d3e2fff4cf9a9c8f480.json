{"ast":null,"code":"import * as d3 from \"d3\";\nvar width;\nvar height;\nexport default class BarChart {\n  constructor(element) {\n    this.highlightBars = year => {\n      d3.select(\"#bar\").selectAll(\"rect\").attr(\"fill\", d => d.year === year ? \"#16a085\" : \"#1abc9c\");\n    };\n\n    this.drawBar = (data, dataType, country) => {\n      var bar = this.svg;\n      var bar = d3.select(\"#bar\");\n      var padding = {\n        top: 30,\n        right: 30,\n        bottom: 30,\n        left: 110\n      };\n      var barPadding = 1;\n      var width = +bar.attr(\"width\");\n      var height = +bar.attr(\"height\");\n      var countryData = data.filter(d => d.country === country).sort((a, b) => a.year - b.year);\n      var xScale = d3.scaleLinear().domain(d3.extent(data, d => d.year)).range([padding.left, width - padding.right]);\n      var yScale = d3.scaleLinear().domain([0, d3.max(countryData, d => d[dataType])]).range([height - padding.bottom, padding.top]);\n      var barWidth = xScale(xScale.domain()[0] + 1) - xScale.range()[0];\n      var xAxis = d3.axisBottom(xScale).tickFormat(d3.format(\".0f\"));\n      d3.select(\".x-axis\").attr(\"transform\", \"translate(0, \" + (height - padding.bottom) + \")\").call(xAxis);\n      var yAxis = d3.axisLeft(yScale);\n      d3.select(\".y-axis\").attr(\"transform\", \"translate(\" + (padding.left - barWidth / 2) + \",0)\").transition().duration(1000).call(yAxis);\n      var axisLabel = dataType === \"emissions\" ? \"CO2 emissions, thousand metric tons\" : \"CO2 emissions, metric tons per capita\";\n      var barTitle = country ? \"CO2 Emissions, \" + country : \"Click on a country to see annual trends.\";\n      d3.select(\".y-axis-label\").text(axisLabel);\n      d3.select(\".bar-title\").text(barTitle);\n      var t = d3.transition().duration(1000).ease(d3.easeBounceOut);\n      var update = bar.selectAll(\".bar\").data(countryData);\n      update.exit().transition(t).delay((d, i, nodes) => (nodes.length - i - 1) * 100).attr(\"y\", height - padding.bottom).attr(\"height\", 0).remove();\n      update.enter().append(\"rect\").classed(\"bar\", true).attr(\"y\", height - padding.bottom).attr(\"height\", 0).merge(update).attr(\"x\", d => (xScale(d.year) + xScale(d.year - 1)) / 2).attr(\"width\", barWidth - barPadding).transition(t).delay((d, i) => i * 100).attr(\"y\", d => yScale(d[dataType])).attr(\"height\", d => height - padding.bottom - yScale(d[dataType]));\n    };\n\n    width = element.offsetWidth;\n    height = 300;\n    this.svg = d3.select(element).append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n    this.svg.append(\"g\").classed(\"x-axis\", true);\n    this.svg.append(\"g\").classed(\"y-axis\", true);\n    this.svg.append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"x\", -height / 2).attr(\"dy\", \"1em\").style(\"text-anchor\", \"middle\").style(\"font-size\", \"1em\").classed(\"y-axis-label\", true);\n    this.svg.attr(\"x\", width / 2).attr(\"y\", \"1em\").attr(\"font-size\", \"1.5em\").style(\"text-anchor\", \"middle\").classed(\"bar-title\", true);\n  }\n\n}","map":{"version":3,"sources":["/Users/wchen/Dropbox/UMN/2019_Fall/Job/code sample/sample/co2_emission/src/components/BarChart.js"],"names":["d3","width","height","BarChart","constructor","element","highlightBars","year","select","selectAll","attr","d","drawBar","data","dataType","country","bar","svg","padding","top","right","bottom","left","barPadding","countryData","filter","sort","a","b","xScale","scaleLinear","domain","extent","range","yScale","max","barWidth","xAxis","axisBottom","tickFormat","format","call","yAxis","axisLeft","transition","duration","axisLabel","barTitle","text","t","ease","easeBounceOut","update","exit","delay","i","nodes","length","remove","enter","append","classed","merge","offsetWidth","style"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\n\nvar width;\nvar height;\n\nexport default class BarChart {\n  constructor(element) {\n    width = element.offsetWidth;\n    height = 300;\n\n    this.svg = d3\n      .select(element)\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    this.svg.append(\"g\").classed(\"x-axis\", true);\n    this.svg.append(\"g\").classed(\"y-axis\", true);\n\n    this.svg\n      .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"x\", -height / 2)\n      .attr(\"dy\", \"1em\")\n      .style(\"text-anchor\", \"middle\")\n      .style(\"font-size\", \"1em\")\n      .classed(\"y-axis-label\", true);\n\n    this.svg\n      .attr(\"x\", width / 2)\n      .attr(\"y\", \"1em\")\n      .attr(\"font-size\", \"1.5em\")\n      .style(\"text-anchor\", \"middle\")\n      .classed(\"bar-title\", true);\n  }\n\n  highlightBars = year => {\n    d3.select(\"#bar\")\n      .selectAll(\"rect\")\n      .attr(\"fill\", d => (d.year === year ? \"#16a085\" : \"#1abc9c\"));\n  };\n\n  drawBar = (data, dataType, country) => {\n    var bar = this.svg;\n    var bar = d3.select(\"#bar\");\n    var padding = {\n      top: 30,\n      right: 30,\n      bottom: 30,\n      left: 110\n    };\n    var barPadding = 1;\n    var width = +bar.attr(\"width\");\n    var height = +bar.attr(\"height\");\n    var countryData = data\n      .filter(d => d.country === country)\n      .sort((a, b) => a.year - b.year);\n\n    var xScale = d3\n      .scaleLinear()\n      .domain(d3.extent(data, d => d.year))\n      .range([padding.left, width - padding.right]);\n\n    var yScale = d3\n      .scaleLinear()\n      .domain([0, d3.max(countryData, d => d[dataType])])\n      .range([height - padding.bottom, padding.top]);\n\n    var barWidth = xScale(xScale.domain()[0] + 1) - xScale.range()[0];\n\n    var xAxis = d3.axisBottom(xScale).tickFormat(d3.format(\".0f\"));\n\n    d3.select(\".x-axis\")\n      .attr(\"transform\", \"translate(0, \" + (height - padding.bottom) + \")\")\n      .call(xAxis);\n\n    var yAxis = d3.axisLeft(yScale);\n\n    d3.select(\".y-axis\")\n      .attr(\"transform\", \"translate(\" + (padding.left - barWidth / 2) + \",0)\")\n      .transition()\n      .duration(1000)\n      .call(yAxis);\n\n    var axisLabel =\n      dataType === \"emissions\"\n        ? \"CO2 emissions, thousand metric tons\"\n        : \"CO2 emissions, metric tons per capita\";\n\n    var barTitle = country\n      ? \"CO2 Emissions, \" + country\n      : \"Click on a country to see annual trends.\";\n\n    d3.select(\".y-axis-label\").text(axisLabel);\n\n    d3.select(\".bar-title\").text(barTitle);\n\n    var t = d3\n      .transition()\n      .duration(1000)\n      .ease(d3.easeBounceOut);\n\n    var update = bar.selectAll(\".bar\").data(countryData);\n\n    update\n      .exit()\n      .transition(t)\n      .delay((d, i, nodes) => (nodes.length - i - 1) * 100)\n      .attr(\"y\", height - padding.bottom)\n      .attr(\"height\", 0)\n      .remove();\n\n    update\n      .enter()\n      .append(\"rect\")\n      .classed(\"bar\", true)\n      .attr(\"y\", height - padding.bottom)\n      .attr(\"height\", 0)\n      .merge(update)\n      .attr(\"x\", d => (xScale(d.year) + xScale(d.year - 1)) / 2)\n      .attr(\"width\", barWidth - barPadding)\n      .transition(t)\n      .delay((d, i) => i * 100)\n      .attr(\"y\", d => yScale(d[dataType]))\n      .attr(\"height\", d => height - padding.bottom - yScale(d[dataType]));\n  };\n}\n"]},"metadata":{},"sourceType":"module"}