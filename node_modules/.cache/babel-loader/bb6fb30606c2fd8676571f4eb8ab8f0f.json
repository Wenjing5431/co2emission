{"ast":null,"code":"import * as d3 from \"d3\";\nimport BarChart from \"./BarChart\";\nvar width;\nvar height;\nconst margin = {\n  top: 50,\n  bottom: 150,\n  left: 0,\n  right: 0\n};\nexport default class MapChart extends BarChart {\n  constructor(element) {\n    // console.log(\"element\", element);\n    // console.log(\"check element:\", element.offsetWidth);\n    width = element.offsetWidth + margin.left + margin.right;\n    height = 300 + margin.top + margin.bottom; // d3.select(element)\n    //   .attr(\"width\", width)\n    //   .attr(\"height\", height)\n    //   .append(\"text\")\n    //   .attr(\"x\", width / 2)\n    //   .attr(\"y\", \"1em\")\n    //   .attr(\"font-size\", \"1.5em\")\n    //   .style(\"text-anchor\", \"middle\")\n    //   .classed(\"map-title\", true);\n\n    this.svg = d3.select(element).append(\"svg\").attr(\"width\", width).attr(\"height\", height) //   .append(\"g\")\n    .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n    this.svg.append(\"text\").attr(\"x\", width / 2).attr(\"y\", \"1em\").attr(\"font-size\", \"1.2em\").attr(\"font-family\", \"Open Sans\").style(\"text-anchor\", \"middle\").style(\"fill\", \"#ffffff\").classed(\"map-title\", true); // this.element = element;\n  }\n\n}\n\nfunction graphTitle(str) {\n  return str.replace(/[A-Z]/g, c => \" \" + c.toLowerCase());\n}","map":{"version":3,"sources":["/Users/wchen/Dropbox/UMN/2019_Fall/Job/code sample/sample/co2_emission/src/components/MapChart.js"],"names":["d3","BarChart","width","height","margin","top","bottom","left","right","MapChart","constructor","element","offsetWidth","svg","select","append","attr","style","classed","graphTitle","str","replace","c","toLowerCase"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,IAAIC,KAAJ;AACA,IAAIC,MAAJ;AACA,MAAMC,MAAM,GAAG;AAAEC,EAAAA,GAAG,EAAE,EAAP;AAAWC,EAAAA,MAAM,EAAE,GAAnB;AAAwBC,EAAAA,IAAI,EAAE,CAA9B;AAAiCC,EAAAA,KAAK,EAAE;AAAxC,CAAf;AAEA,eAAe,MAAMC,QAAN,SAAuBR,QAAvB,CAAgC;AAC7CS,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB;AACA;AACAT,IAAAA,KAAK,GAAGS,OAAO,CAACC,WAAR,GAAsBR,MAAM,CAACG,IAA7B,GAAoCH,MAAM,CAACI,KAAnD;AACAL,IAAAA,MAAM,GAAG,MAAMC,MAAM,CAACC,GAAb,GAAmBD,MAAM,CAACE,MAAnC,CAJmB,CAMnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAKO,GAAL,GAAWb,EAAE,CACVc,MADQ,CACDH,OADC,EAERI,MAFQ,CAED,KAFC,EAGRC,IAHQ,CAGH,OAHG,EAGMd,KAHN,EAIRc,IAJQ,CAIH,QAJG,EAIOb,MAJP,EAKT;AALS,KAMRa,IANQ,CAMH,WANG,EAMW,aAAYZ,MAAM,CAACG,IAAK,KAAIH,MAAM,CAACC,GAAI,GANlD,CAAX;AAQA,SAAKQ,GAAL,CACGE,MADH,CACU,MADV,EAEGC,IAFH,CAEQ,GAFR,EAEad,KAAK,GAAG,CAFrB,EAGGc,IAHH,CAGQ,GAHR,EAGa,KAHb,EAIGA,IAJH,CAIQ,WAJR,EAIqB,OAJrB,EAKGA,IALH,CAKQ,aALR,EAKuB,WALvB,EAMGC,KANH,CAMS,aANT,EAMwB,QANxB,EAOGA,KAPH,CAOS,MAPT,EAOiB,SAPjB,EAQGC,OARH,CAQW,WARX,EAQwB,IARxB,EAvBmB,CAiCnB;AACD;;AAnC4C;;AAqG/C,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AACvB,SAAOA,GAAG,CAACC,OAAJ,CAAY,QAAZ,EAAsBC,CAAC,IAAI,MAAMA,CAAC,CAACC,WAAF,EAAjC,CAAP;AACD","sourcesContent":["import * as d3 from \"d3\";\nimport BarChart from \"./BarChart\";\n\nvar width;\nvar height;\nconst margin = { top: 50, bottom: 150, left: 0, right: 0 };\n\nexport default class MapChart extends BarChart {\n  constructor(element) {\n    // console.log(\"element\", element);\n    // console.log(\"check element:\", element.offsetWidth);\n    width = element.offsetWidth + margin.left + margin.right;\n    height = 300 + margin.top + margin.bottom;\n\n    // d3.select(element)\n    //   .attr(\"width\", width)\n    //   .attr(\"height\", height)\n    //   .append(\"text\")\n    //   .attr(\"x\", width / 2)\n    //   .attr(\"y\", \"1em\")\n    //   .attr(\"font-size\", \"1.5em\")\n    //   .style(\"text-anchor\", \"middle\")\n    //   .classed(\"map-title\", true);\n    this.svg = d3\n      .select(element)\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      //   .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n\n    this.svg\n      .append(\"text\")\n      .attr(\"x\", width / 2)\n      .attr(\"y\", \"1em\")\n      .attr(\"font-size\", \"1.2em\")\n      .attr(\"font-family\", \"Open Sans\")\n      .style(\"text-anchor\", \"middle\")\n      .style(\"fill\", \"#ffffff\")\n      .classed(\"map-title\", true);\n\n    // this.element = element;\n  }\n\n  drawMap = (geoData, climateData, year, dataType) => {\n    var map = this.svg;\n    //console.log(\"map element\", map);\n\n    var projection = d3\n      .geoMercator()\n      .scale(110)\n      .translate([+map.attr(\"width\") / 2, +map.attr(\"height\") / 1.4]);\n\n    var path = d3.geoPath().projection(projection);\n\n    d3.select(\"#year-val\").text(year);\n\n    geoData.forEach(d => {\n      var countries = climateData.filter(row => row.countryCode === d.id);\n      var name = \"\";\n      if (countries.length > 0) name = countries[0].country;\n      d.properties = countries.find(c => c.year === year) || { country: name };\n    });\n\n    var colors = [\"#f1c40f\", \"#e67e22\", \"#e74c3c\", \"#c0392b\"];\n\n    var domains = {\n      emissions: [0, 2.5e5, 1e6, 5e6],\n      emissionsPerCapita: [0, 0.5, 2, 10]\n    };\n\n    var mapColorScale = d3\n      .scaleLinear()\n      .domain(domains[dataType])\n      .range(colors);\n\n    var update = map.selectAll(\".country\").data(geoData);\n\n    update\n      .enter()\n      .append(\"path\")\n      .classed(\"country\", true)\n      .attr(\"d\", path)\n\n      .on(\"click\", function() {\n        var currentDataType = d3.select(\"input:checked\").property(\"value\");\n        var country = d3.select(this);\n        var isActive = country.classed(\"active\");\n        var countryName = isActive ? \"\" : country.data()[0].properties.country;\n        this.drawBar(climateData, currentDataType, countryName);\n        // highlightBars(+d3.select(\"#year\").property(\"value\"));\n        d3.selectAll(\".country\").classed(\"active\", false);\n        country.classed(\"active\", !isActive);\n      })\n      .merge(update)\n      .transition()\n      .duration(750)\n      .attr(\"fill\", d => {\n        var val = d.properties[dataType];\n        return val ? mapColorScale(val) : \"#ccc\";\n      });\n\n    d3.select(\".map-title\").text(\n      \"Carbon dioxide \" + graphTitle(dataType) + \", \" + year\n    );\n  };\n}\n\nfunction graphTitle(str) {\n  return str.replace(/[A-Z]/g, c => \" \" + c.toLowerCase());\n}\n"]},"metadata":{},"sourceType":"module"}