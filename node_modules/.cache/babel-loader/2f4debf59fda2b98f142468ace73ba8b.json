{"ast":null,"code":"import * as d3 from \"d3\";\nvar width;\nvar height;\nexport default class PieChart {\n  constructor(element) {\n    this.drawPie = (data, currentYear) => {\n      var pie = this.svg;\n      var arcs = d3.pie().sort((a, b) => {\n        if (a.continent < b.continent) return -1;\n        if (a.continent > b.continent) return 1;\n        return a.emissions - b.emissions;\n      }).value(d => d.emissions);\n      var path = d3.arc().outerRadius(+pie.attr(\"height\") / 2 - 50).innerRadius(0);\n      var yearData = data.filter(d => d.year === currentYear);\n      var continents = [];\n\n      for (var i = 0; i < yearData.length; i++) {\n        var continent = yearData[i].continent;\n\n        if (!continents.includes(continent)) {\n          continents.push(continent);\n        }\n      }\n\n      var colorScale = d3.scaleOrdinal().domain(continents).range([\"#FFCD00\", \"#A3D6D8\", \"#FFA772\", \"#676766\", \"#A4A8AA\"]);\n      var update = pie.select(\".chart\").selectAll(\".arc\").data(arcs(yearData));\n      update.exit().remove();\n      update.enter().append(\"path\").classed(\"arc\", true).attr(\"stroke\", \"#dff1ff\").attr(\"stroke-width\", \"0.25px\").merge(update).attr(\"fill\", d => colorScale(d.data.continent)).attr(\"d\", path);\n      pie.select(\".pie-title\").text(\"Total emissions by continent and region, \" + currentYear);\n    };\n\n    width = element.offsetWidth;\n    height = 300;\n    this.svg = d3.select(element).append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n    this.svg.append(\"g\").attr(\"transform\", `translate(${width / 2}, ${height / 2 + 10})`).classed(\"chart\", true);\n    this.svg.append(\"text\").attr(\"x\", width / 2).attr(\"y\", \"1em\").attr(\"font-size\", \"1em\").attr(\"font-family\", \"Open Sans\").style(\"text-anchor\", \"middle\").style(\"fill\", \"#031327\").classed(\"pie-title\", true);\n  }\n\n}","map":{"version":3,"sources":["/Users/wchen/Dropbox/UMN/2019_Fall/Job/code sample/sample/co2_emission/src/components/PieChart.js"],"names":["d3","width","height","PieChart","constructor","element","drawPie","data","currentYear","pie","svg","arcs","sort","a","b","continent","emissions","value","d","path","arc","outerRadius","attr","innerRadius","yearData","filter","year","continents","i","length","includes","push","colorScale","scaleOrdinal","domain","range","update","select","selectAll","exit","remove","enter","append","classed","merge","text","offsetWidth","style"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\n\nvar width;\nvar height;\n\nexport default class PieChart {\n  constructor(element) {\n    width = element.offsetWidth;\n    height = 300;\n\n    this.svg = d3\n      .select(element)\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    this.svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${width / 2}, ${height / 2 + 10})`)\n      .classed(\"chart\", true);\n\n    this.svg\n      .append(\"text\")\n      .attr(\"x\", width / 2)\n      .attr(\"y\", \"1em\")\n      .attr(\"font-size\", \"1em\")\n      .attr(\"font-family\", \"Open Sans\")\n      .style(\"text-anchor\", \"middle\")\n      .style(\"fill\", \"#031327\")\n      .classed(\"pie-title\", true);\n  }\n\n  drawPie = (data, currentYear) => {\n    var pie = this.svg;\n\n    var arcs = d3\n      .pie()\n      .sort((a, b) => {\n        if (a.continent < b.continent) return -1;\n        if (a.continent > b.continent) return 1;\n        return a.emissions - b.emissions;\n      })\n      .value(d => d.emissions);\n\n    var path = d3\n      .arc()\n      .outerRadius(+pie.attr(\"height\") / 2 - 50)\n      .innerRadius(0);\n\n    var yearData = data.filter(d => d.year === currentYear);\n    var continents = [];\n    for (var i = 0; i < yearData.length; i++) {\n      var continent = yearData[i].continent;\n      if (!continents.includes(continent)) {\n        continents.push(continent);\n      }\n    }\n\n    var colorScale = d3\n      .scaleOrdinal()\n      .domain(continents)\n      .range([\"#FFCD00\", \"#A3D6D8\", \"#FFA772\", \"#676766\", \"#A4A8AA\"]);\n\n    var update = pie\n      .select(\".chart\")\n      .selectAll(\".arc\")\n      .data(arcs(yearData));\n\n    update.exit().remove();\n\n    update\n      .enter()\n      .append(\"path\")\n      .classed(\"arc\", true)\n      .attr(\"stroke\", \"#dff1ff\")\n      .attr(\"stroke-width\", \"0.25px\")\n      .merge(update)\n      .attr(\"fill\", d => colorScale(d.data.continent))\n      .attr(\"d\", path);\n\n    pie\n      .select(\".pie-title\")\n      .text(\"Total emissions by continent and region, \" + currentYear);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}