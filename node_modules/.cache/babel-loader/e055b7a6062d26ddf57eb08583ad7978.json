{"ast":null,"code":"import * as d3 from \"d3\";\nvar width;\nvar height;\nexport default class BarChart {\n  constructor(element) {\n    this.drawBar = (data, dataType, country) => {\n      var bar = this.svg;\n      var padding = {\n        top: 30,\n        right: 30,\n        bottom: 30,\n        left: 110\n      };\n      var barPadding = 1;\n      var width = +bar.attr(\"width\");\n      var height = +bar.attr(\"height\");\n      var countryData = data.filter(d => d.country === country).sort((a, b) => a.year - b.year);\n      var xScale = d3.scaleLinear().domain(d3.extent(data, d => d.year)).range([padding.left, width - padding.right]);\n      var yScale = d3.scaleLinear().domain([0, d3.max(countryData, d => d[dataType])]).range([height - padding.bottom, padding.top]);\n      var barWidth = xScale(xScale.domain()[0] + 1) - xScale.range()[0];\n      var xAxis = d3.axisBottom(xScale).tickFormat(d3.format(\".0f\"));\n      d3.select(\".x-axis\").attr(\"transform\", \"translate(0, \" + (height - padding.bottom) + \")\").call(xAxis);\n      var yAxis = d3.axisLeft(yScale);\n      d3.select(\".y-axis\").attr(\"transform\", \"translate(\" + (padding.left - barWidth / 2) + \",0)\").transition().duration(1000).call(yAxis);\n      var axisLabel = dataType === \"emissions\" ? \"CO2 emissions, thousand metric tons\" : \"CO2 emissions, metric tons per capita\";\n      var barTitle = country ? \"CO2 Emissions, \" + country : \"Click on a country to see annual trends.\";\n      this.svg.select(\".y-axis-label\").text(axisLabel);\n      this.svg.select(\".bar-title\").text(barTitle);\n      var t = d3.transition().duration(1000).ease(d3.easeBounceOut);\n      var update = bar.selectAll(\".bar\").data(countryData);\n      update.exit().transition(t).delay((d, i, nodes) => (nodes.length - i - 1) * 100).attr(\"y\", height - padding.bottom).attr(\"height\", 0).remove();\n      update.enter().append(\"rect\").classed(\"bar\", true).attr(\"y\", height - padding.bottom).attr(\"height\", 0).merge(update).attr(\"x\", d => (xScale(d.year) + xScale(d.year - 1)) / 2).attr(\"width\", barWidth - barPadding).transition(t).delay((d, i) => i * 100).attr(\"y\", d => yScale(d[dataType])).attr(\"height\", d => height - padding.bottom - yScale(d[dataType]));\n    };\n\n    width = element.offsetWidth;\n    height = 300;\n    this.svg = d3.select(element).append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n    this.svg.append(\"g\").classed(\"x-axis\", true);\n    this.svg.append(\"g\").classed(\"y-axis\", true);\n    this.svg.append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"x\", -height).attr(\"dy\", \"1em\").style(\"text-anchor\", \"middle\").style(\"font-size\", \"1em\").classed(\"y-axis-label\", true);\n    this.svg.attr(\"x\", width).attr(\"y\", \"1em\").attr(\"font-size\", \"1.5em\").style(\"text-anchor\", \"middle\").classed(\"bar-title\", true);\n  } //   highlightBars = year => {\n  //     this.svg\n  //       .selectAll(\"rect\")\n  //       .attr(\"fill\", d => (d.year === year ? \"#16a085\" : \"#1abc9c\"));\n  //   };\n\n\n}","map":{"version":3,"sources":["/Users/wchen/Dropbox/UMN/2019_Fall/Job/code sample/sample/co2_emission/src/components/BarChart.js"],"names":["d3","width","height","BarChart","constructor","element","drawBar","data","dataType","country","bar","svg","padding","top","right","bottom","left","barPadding","attr","countryData","filter","d","sort","a","b","year","xScale","scaleLinear","domain","extent","range","yScale","max","barWidth","xAxis","axisBottom","tickFormat","format","select","call","yAxis","axisLeft","transition","duration","axisLabel","barTitle","text","t","ease","easeBounceOut","update","selectAll","exit","delay","i","nodes","length","remove","enter","append","classed","merge","offsetWidth","style"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\n\nvar width;\nvar height;\n\nexport default class BarChart {\n  constructor(element) {\n    width = element.offsetWidth;\n    height = 300;\n\n    this.svg = d3\n      .select(element)\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    this.svg.append(\"g\").classed(\"x-axis\", true);\n    this.svg.append(\"g\").classed(\"y-axis\", true);\n\n    this.svg\n      .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"x\", -height)\n      .attr(\"dy\", \"1em\")\n      .style(\"text-anchor\", \"middle\")\n      .style(\"font-size\", \"1em\")\n      .classed(\"y-axis-label\", true);\n\n    this.svg\n      .attr(\"x\", width)\n      .attr(\"y\", \"1em\")\n      .attr(\"font-size\", \"1.5em\")\n      .style(\"text-anchor\", \"middle\")\n      .classed(\"bar-title\", true);\n  }\n\n  //   highlightBars = year => {\n  //     this.svg\n  //       .selectAll(\"rect\")\n  //       .attr(\"fill\", d => (d.year === year ? \"#16a085\" : \"#1abc9c\"));\n  //   };\n\n  drawBar = (data, dataType, country) => {\n    var bar = this.svg;\n\n    var padding = {\n      top: 30,\n      right: 30,\n      bottom: 30,\n      left: 110\n    };\n    var barPadding = 1;\n    var width = +bar.attr(\"width\");\n    var height = +bar.attr(\"height\");\n    var countryData = data\n      .filter(d => d.country === country)\n      .sort((a, b) => a.year - b.year);\n\n    var xScale = d3\n      .scaleLinear()\n      .domain(d3.extent(data, d => d.year))\n      .range([padding.left, width - padding.right]);\n\n    var yScale = d3\n      .scaleLinear()\n      .domain([0, d3.max(countryData, d => d[dataType])])\n      .range([height - padding.bottom, padding.top]);\n\n    var barWidth = xScale(xScale.domain()[0] + 1) - xScale.range()[0];\n\n    var xAxis = d3.axisBottom(xScale).tickFormat(d3.format(\".0f\"));\n\n    d3.select(\".x-axis\")\n      .attr(\"transform\", \"translate(0, \" + (height - padding.bottom) + \")\")\n      .call(xAxis);\n\n    var yAxis = d3.axisLeft(yScale);\n\n    d3.select(\".y-axis\")\n      .attr(\"transform\", \"translate(\" + (padding.left - barWidth / 2) + \",0)\")\n      .transition()\n      .duration(1000)\n      .call(yAxis);\n\n    var axisLabel =\n      dataType === \"emissions\"\n        ? \"CO2 emissions, thousand metric tons\"\n        : \"CO2 emissions, metric tons per capita\";\n\n    var barTitle = country\n      ? \"CO2 Emissions, \" + country\n      : \"Click on a country to see annual trends.\";\n\n    this.svg.select(\".y-axis-label\").text(axisLabel);\n\n    this.svg.select(\".bar-title\").text(barTitle);\n\n    var t = d3\n      .transition()\n      .duration(1000)\n      .ease(d3.easeBounceOut);\n\n    var update = bar.selectAll(\".bar\").data(countryData);\n\n    update\n      .exit()\n      .transition(t)\n      .delay((d, i, nodes) => (nodes.length - i - 1) * 100)\n      .attr(\"y\", height - padding.bottom)\n      .attr(\"height\", 0)\n      .remove();\n\n    update\n      .enter()\n      .append(\"rect\")\n      .classed(\"bar\", true)\n      .attr(\"y\", height - padding.bottom)\n      .attr(\"height\", 0)\n      .merge(update)\n      .attr(\"x\", d => (xScale(d.year) + xScale(d.year - 1)) / 2)\n      .attr(\"width\", barWidth - barPadding)\n      .transition(t)\n      .delay((d, i) => i * 100)\n      .attr(\"y\", d => yScale(d[dataType]))\n      .attr(\"height\", d => height - padding.bottom - yScale(d[dataType]));\n  };\n}\n"]},"metadata":{},"sourceType":"module"}